/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/any-base";
exports.ids = ["vendor-chunks/any-base"];
exports.modules = {

/***/ "(rsc)/../../node_modules/any-base/index.js":
/*!********************************************!*\
  !*** ../../node_modules/any-base/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Converter = __webpack_require__(/*! ./src/converter */ \"(rsc)/../../node_modules/any-base/src/converter.js\");\n\n/**\n * Function get source and destination alphabet and return convert function\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n *\n * @returns {function(number|Array)}\n */\nfunction anyBase(srcAlphabet, dstAlphabet) {\n    var converter = new Converter(srcAlphabet, dstAlphabet);\n    /**\n     * Convert function\n     *\n     * @param {string|Array} number\n     *\n     * @return {string|Array} number\n     */\n    return function (number) {\n        return converter.convert(number);\n    }\n};\n\nanyBase.BIN = '01';\nanyBase.OCT = '01234567';\nanyBase.DEC = '0123456789';\nanyBase.HEX = '0123456789abcdef';\n\nmodule.exports = anyBase;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2FueS1iYXNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLDJFQUFpQjs7QUFFekM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsY0FBYztBQUN6QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0I7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy9hbnktYmFzZS9pbmRleC5qcz84MDk2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBDb252ZXJ0ZXIgPSByZXF1aXJlKCcuL3NyYy9jb252ZXJ0ZXInKTtcblxuLyoqXG4gKiBGdW5jdGlvbiBnZXQgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBhbHBoYWJldCBhbmQgcmV0dXJuIGNvbnZlcnQgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0gc3JjQWxwaGFiZXRcbiAqIEBwYXJhbSB7c3RyaW5nfEFycmF5fSBkc3RBbHBoYWJldFxuICpcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihudW1iZXJ8QXJyYXkpfVxuICovXG5mdW5jdGlvbiBhbnlCYXNlKHNyY0FscGhhYmV0LCBkc3RBbHBoYWJldCkge1xuICAgIHZhciBjb252ZXJ0ZXIgPSBuZXcgQ29udmVydGVyKHNyY0FscGhhYmV0LCBkc3RBbHBoYWJldCk7XG4gICAgLyoqXG4gICAgICogQ29udmVydCBmdW5jdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IG51bWJlclxuICAgICAqXG4gICAgICogQHJldHVybiB7c3RyaW5nfEFycmF5fSBudW1iZXJcbiAgICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gKG51bWJlcikge1xuICAgICAgICByZXR1cm4gY29udmVydGVyLmNvbnZlcnQobnVtYmVyKTtcbiAgICB9XG59O1xuXG5hbnlCYXNlLkJJTiA9ICcwMSc7XG5hbnlCYXNlLk9DVCA9ICcwMTIzNDU2Nyc7XG5hbnlCYXNlLkRFQyA9ICcwMTIzNDU2Nzg5JztcbmFueUJhc2UuSEVYID0gJzAxMjM0NTY3ODlhYmNkZWYnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFueUJhc2U7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/any-base/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/any-base/src/converter.js":
/*!****************************************************!*\
  !*** ../../node_modules/any-base/src/converter.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Converter\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n * @constructor\n */\nfunction Converter(srcAlphabet, dstAlphabet) {\n    if (!srcAlphabet || !dstAlphabet || !srcAlphabet.length || !dstAlphabet.length) {\n        throw new Error('Bad alphabet');\n    }\n    this.srcAlphabet = srcAlphabet;\n    this.dstAlphabet = dstAlphabet;\n}\n\n/**\n * Convert number from source alphabet to destination alphabet\n *\n * @param {string|Array} number - number represented as a string or array of points\n *\n * @returns {string|Array}\n */\nConverter.prototype.convert = function(number) {\n    var i, divide, newlen,\n    numberMap = {},\n    fromBase = this.srcAlphabet.length,\n    toBase = this.dstAlphabet.length,\n    length = number.length,\n    result = typeof number === 'string' ? '' : [];\n\n    if (!this.isValid(number)) {\n        throw new Error('Number \"' + number + '\" contains of non-alphabetic digits (' + this.srcAlphabet + ')');\n    }\n\n    if (this.srcAlphabet === this.dstAlphabet) {\n        return number;\n    }\n\n    for (i = 0; i < length; i++) {\n        numberMap[i] = this.srcAlphabet.indexOf(number[i]);\n    }\n    do {\n        divide = 0;\n        newlen = 0;\n        for (i = 0; i < length; i++) {\n            divide = divide * fromBase + numberMap[i];\n            if (divide >= toBase) {\n                numberMap[newlen++] = parseInt(divide / toBase, 10);\n                divide = divide % toBase;\n            } else if (newlen > 0) {\n                numberMap[newlen++] = 0;\n            }\n        }\n        length = newlen;\n        result = this.dstAlphabet.slice(divide, divide + 1).concat(result);\n    } while (newlen !== 0);\n\n    return result;\n};\n\n/**\n * Valid number with source alphabet\n *\n * @param {number} number\n *\n * @returns {boolean}\n */\nConverter.prototype.isValid = function(number) {\n    var i = 0;\n    for (; i < number.length; ++i) {\n        if (this.srcAlphabet.indexOf(number[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\nmodule.exports = Converter;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2FueS1iYXNlL3NyYy9jb252ZXJ0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixZQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2FueS1iYXNlL3NyYy9jb252ZXJ0ZXIuanM/Mjk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29udmVydGVyXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IHNyY0FscGhhYmV0XG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0gZHN0QWxwaGFiZXRcbiAqIEBjb25zdHJ1Y3RvclxuICovXG5mdW5jdGlvbiBDb252ZXJ0ZXIoc3JjQWxwaGFiZXQsIGRzdEFscGhhYmV0KSB7XG4gICAgaWYgKCFzcmNBbHBoYWJldCB8fCAhZHN0QWxwaGFiZXQgfHwgIXNyY0FscGhhYmV0Lmxlbmd0aCB8fCAhZHN0QWxwaGFiZXQubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQmFkIGFscGhhYmV0Jyk7XG4gICAgfVxuICAgIHRoaXMuc3JjQWxwaGFiZXQgPSBzcmNBbHBoYWJldDtcbiAgICB0aGlzLmRzdEFscGhhYmV0ID0gZHN0QWxwaGFiZXQ7XG59XG5cbi8qKlxuICogQ29udmVydCBudW1iZXIgZnJvbSBzb3VyY2UgYWxwaGFiZXQgdG8gZGVzdGluYXRpb24gYWxwaGFiZXRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xBcnJheX0gbnVtYmVyIC0gbnVtYmVyIHJlcHJlc2VudGVkIGFzIGEgc3RyaW5nIG9yIGFycmF5IG9mIHBvaW50c1xuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd8QXJyYXl9XG4gKi9cbkNvbnZlcnRlci5wcm90b3R5cGUuY29udmVydCA9IGZ1bmN0aW9uKG51bWJlcikge1xuICAgIHZhciBpLCBkaXZpZGUsIG5ld2xlbixcbiAgICBudW1iZXJNYXAgPSB7fSxcbiAgICBmcm9tQmFzZSA9IHRoaXMuc3JjQWxwaGFiZXQubGVuZ3RoLFxuICAgIHRvQmFzZSA9IHRoaXMuZHN0QWxwaGFiZXQubGVuZ3RoLFxuICAgIGxlbmd0aCA9IG51bWJlci5sZW5ndGgsXG4gICAgcmVzdWx0ID0gdHlwZW9mIG51bWJlciA9PT0gJ3N0cmluZycgPyAnJyA6IFtdO1xuXG4gICAgaWYgKCF0aGlzLmlzVmFsaWQobnVtYmVyKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ051bWJlciBcIicgKyBudW1iZXIgKyAnXCIgY29udGFpbnMgb2Ygbm9uLWFscGhhYmV0aWMgZGlnaXRzICgnICsgdGhpcy5zcmNBbHBoYWJldCArICcpJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc3JjQWxwaGFiZXQgPT09IHRoaXMuZHN0QWxwaGFiZXQpIHtcbiAgICAgICAgcmV0dXJuIG51bWJlcjtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbnVtYmVyTWFwW2ldID0gdGhpcy5zcmNBbHBoYWJldC5pbmRleE9mKG51bWJlcltpXSk7XG4gICAgfVxuICAgIGRvIHtcbiAgICAgICAgZGl2aWRlID0gMDtcbiAgICAgICAgbmV3bGVuID0gMDtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkaXZpZGUgPSBkaXZpZGUgKiBmcm9tQmFzZSArIG51bWJlck1hcFtpXTtcbiAgICAgICAgICAgIGlmIChkaXZpZGUgPj0gdG9CYXNlKSB7XG4gICAgICAgICAgICAgICAgbnVtYmVyTWFwW25ld2xlbisrXSA9IHBhcnNlSW50KGRpdmlkZSAvIHRvQmFzZSwgMTApO1xuICAgICAgICAgICAgICAgIGRpdmlkZSA9IGRpdmlkZSAlIHRvQmFzZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmV3bGVuID4gMCkge1xuICAgICAgICAgICAgICAgIG51bWJlck1hcFtuZXdsZW4rK10gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxlbmd0aCA9IG5ld2xlbjtcbiAgICAgICAgcmVzdWx0ID0gdGhpcy5kc3RBbHBoYWJldC5zbGljZShkaXZpZGUsIGRpdmlkZSArIDEpLmNvbmNhdChyZXN1bHQpO1xuICAgIH0gd2hpbGUgKG5ld2xlbiAhPT0gMCk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBWYWxpZCBudW1iZXIgd2l0aCBzb3VyY2UgYWxwaGFiZXRcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyXG4gKlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbkNvbnZlcnRlci5wcm90b3R5cGUuaXNWYWxpZCA9IGZ1bmN0aW9uKG51bWJlcikge1xuICAgIHZhciBpID0gMDtcbiAgICBmb3IgKDsgaSA8IG51bWJlci5sZW5ndGg7ICsraSkge1xuICAgICAgICBpZiAodGhpcy5zcmNBbHBoYWJldC5pbmRleE9mKG51bWJlcltpXSkgPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENvbnZlcnRlcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/any-base/src/converter.js\n");

/***/ })

};
;